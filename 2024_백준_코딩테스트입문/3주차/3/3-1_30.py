# https://www.acmicpc.net/problem/13116

'''
요구사항:
- A와 B가 주어졌을 때 특정 규칙에 따른 결과 계산
- 이진수 표현과 비트 연산을 활용한 계산일 

- 최소 공통 조상 문제, 이진 트리의 노드 번호를 이용해  최소 공통 조상을 찾는 알고리즘 작성

문제 접근:
1. 이진 트리에서 최소 공통 조상
- 두 숫자 A와 B는 완전 이진 트리의 노드라고 가정
- 이진 트리에서 각 노드는 부모 노드와 연결되어 있음
    - 노드v의 부모는 v // 2
    - 노드 간의 관계를 반복적으로 탐색하며 최상위 공통 부모 찾기
2. 거리 계산
- 두 숫자 A와 B의 거리 = (A에서 공통 조상까지의 거리) + (B에서 공통 조상까지의 거리)
- A와 B가 처음으로 같은 값이 되는 시접 = 공통 조상
- 올라간 횟수(=거리)를 모두 합산하여 출력

구현 방법:
알고리즘
1. 각 테스트 케이스에서 두 숫자 A, B를 읽음
2. 두 숫자가 같아질 때까지 각 숫자를 부모로 이용하여 거리 계산 (v//2)
'''

import sys
T = int(sys.stdin.readline())
    
for i in range(T):
    A, B = map(int, sys.stdin.readline().split())
    # A와 B가 같아질 때까지 반복
    while True:
        if A == B:
            print(A*10)
            break
        if A > B:
            A //= 2
        else:
            B //= 2
    