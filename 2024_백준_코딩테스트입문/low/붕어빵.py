'''
문제
고려대학교에 입학한 새내기 호돌이는 안암역을 지나다가 한 붕어빵 장수를 만났어요.

“안녕, 안녕, 안녕하십니까, 아저씨! 붕어빵 두 개 주세요.”

“안녕을 세 번 외쳤으니 붕어빵 세 개!”

붕어빵 두 개의 값을 내고 세 개를 받은 호돌이는 기분이 좋았어요. 호돌이가 붕어빵 하나를 꺼내어 한 입 물었는데…. 너무 뜨거워서 그만 붕어빵을 떨어뜨리고 말았어요ㅠㅠ

붕어빵은 자유 낙하운동을 하면서 땅에 떨어졌는데 신기하게도 좌우가 뒤집힌 모양으로 착지했답니다. 호돌이가 붕어빵을 한 입 물기 전의 모양이 입력으로 주어지면, 땅에 떨어졌을 때에는 어떤 모양일지 출력하세요.


입력
첫째 줄에는 두 개의 정수 N과 M(0≤N,M≤10)이 주어집니다. 둘째 줄부터 N개의 줄에 걸쳐 붕어빵의 모양이 주어집니다. 각 행에는 공백을 나타내는 ‘0‘ 또는 붕어빵을 나타내는 ‘1’이 총 M개 주어집니다. 

출력
입력으로 주어진 붕어빵이 좌우로 뒤집힌 모양을 출력하세요.

예제 입력1:

5 7
0010000
0111010
1111111
0111010
0010000

예제 출력:1
0000100
0101110
1111111
0101110
0000100

입력으로 주어지는 각 행을 반전시켜서 출력하면 됩니다. 입력의 1행 1열은 출력의 1행 M열로, 입력의 1행 2열은 출력의 1행 M-1열로 … 입력의 1행 M열은 출력의 1행 1열로 … 입력의 N행 M열은 출력의 N행 1열로 출력하세요.



풀이:
붕어빵의 모양이 주어지면 좌우로 뒤집힌 모양을 출력해야함.
즉 각 행이 뒤집힌 모양을 출력하면 됨 

예제의 1번 줄을 보면
입력: 0010000
출력: 0000100

이것을 참고하여 range의 step 을 활용하여 문제를 풀기로함

조건: 
n: 붕어빵 모양의 행 개수
m: 붕어빵 모양의 열 개수
shape: 붕어빵 모양을 나타내는 2차원 리스트
returns: 좌우로 뒤집힌 붕어빵 모양을 나타내는 2차원 리스트


flip_bungeoppang: 실제로 붕어빵을 뒤집는 함수
- 입력 및 출력, 함수 호출: 붕어빵 모양 정보를 입력받고 flip_bungeoppang 함수를 이용하여 뒤집은 후 결과를 출력

'''


def flip_bungeoppang(n, m, shape):
    
# n: 붕어빵 모양의 행 개수
# m: 붕어빵 모양의 열 개수
# shape: 붕어빵 모양을 나타내는 2차원 리스트
    flipped_shape=[] # 뒤집힌 붕어빵
        # for문을 돌며 각 행을 차근차근 살펴보기
    for i in range(n): # 행 반복
        flipped_row = [] # 후에 행을 뒤집은 결과를 담는 배열
        for j in range(m - 1, -1, -1) : #열 반복(역순), 붕어빵을 뒤집기 위해
            flipped_row.append(shape[i][j]) #뒤집힌 붕어빵 담기
        flipped_shape.append(flipped_row) #for문을 다 돌면 가장 큰 박스인 flipped_shape에 결과물 담기
    return flipped_shape # 그걸 손님한테 던짐

#입력 받기
n, m = map(int, input().split()) 
shape = []
for _ in range(n):
    shape.append(list(input())) 
# 붕어빵 뒤집기
flipped_shape = flip_bungeoppang(n, m, shape)

# 출력
for row in flipped_shape:
    print(''.join(row))