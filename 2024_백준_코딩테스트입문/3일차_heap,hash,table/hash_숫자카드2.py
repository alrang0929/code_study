'''

문제
숫자 카드는 정수 하나가 적혀져 있는 카드이다. 상근이는 숫자 카드 N개를 가지고 있다. 정수 M개가 주어졌을 때, 이 수가 적혀있는 숫자 카드를 상근이가 몇 개 가지고 있는지 구하는 프로그램을 작성하시오.

입력
첫째 줄에 상근이가 가지고 있는 숫자 카드의 개수 N(1 ≤ N ≤ 500,000)이 주어진다. 둘째 줄에는 숫자 카드에 적혀있는 정수가 주어진다. 숫자 카드에 적혀있는 수는 -10,000,000보다 크거나 같고, 10,000,000보다 작거나 같다.

셋째 줄에는 M(1 ≤ M ≤ 500,000)이 주어진다. 넷째 줄에는 상근이가 몇 개 가지고 있는 숫자 카드인지 구해야 할 M개의 정수가 주어지며, 이 수는 공백으로 구분되어져 있다. 이 수도 -10,000,000보다 크거나 같고, 10,000,000보다 작거나 같다.

[출력]
첫째 줄에 입력으로 주어진 M개의 수에 대해서, 각 수가 적힌 숫자 카드를 상근이가 몇 개 가지고 있는지를 공백으로 구분해 출력한다.

[예제입력 1]
10
6 3 2 10 10 10 -10 -10 7 3
8
10 9 -5 2 3 4 5 -10

[예제출력 1]
3 0 0 1 2 0 0 2

'''
# 1. N 입력받기
N = int(input())
# 1-1. N 입력받은 데이터 전처리: 공백기준 스플릿하여 정수 리스트로 변환
cards = list(map(int,input().split()))

# 2. M 입력 받기
M = int(input())
# 2.1 M 데이터 전처리: 입력받은 데이터 전처리: 공백기준 스플릿하여 정수 리스트로 변환
queries = list(map(int,input().split()))

# 판별과정 진행
# 3. 카드 개수를 세기 위한 딕셔너리 생성
card_count = {}
    #3-1. cards로 반복문 실행
for card in cards:
        # 1)만약 card_count 안에 card가 있냐? 
        if card in card_count:
        # card_count 1 증가
            card_count[card] +=1
        #2) 없냐? card_count을 초기값 1로 초기화
        else:    
            card_count[card] =1
# 4. 각 쿼리에  대한 결과 계산
result = []
# 4-1. queries를 돌며 get으로 값을 가져오면 됨
for query in queries:
    result.append(str(card_count.get(query,0)))
    #get(): get(값,0) => 딕셔너리에 값이 있냐? 값 가져오기, 없냐? 대체로 0가져오기
# 결과 출력

print(' '.join(result))